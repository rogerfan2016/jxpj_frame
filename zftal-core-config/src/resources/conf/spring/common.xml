<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<bean id="propertyConfigurer"
    	 class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	 <property name="locations">
    	 	<list>
    	 		<value>classpath:subsystem.properties</value>
    	 	</list>
    	 </property>
    </bean>
    
	<bean id="dataSource" class="com.zfsoft.util.encrypt.NewComboPooledDataSource"
		destroy-method="close"  >
		<property name="driverClass" value="${datasource.driverClassName}"></property>
		<property name="jdbcUrl" value="${datasource.url}"></property> 
        <property name="user" value="${datasource.username}"></property>
        <property name="password" value="${datasource.password}"></property>
        
        <!--连接关闭时默认将所有未提交的操作回滚。Default: false -->
        <property name="autoCommitOnClose" value="false"/>
        
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="10"></property>

		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="60"></property>

		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="10"></property>

		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="600"></property>

		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5"></property>

		<!--每1800秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="0"></property>
		
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数,数据库重启后连接池会尝试再次连接数据库而不用重启TOMCAT -->
		<property name="acquireRetryAttempts" value="3"></property>

		<!--
			获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
			保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false
		-->
		<property name="breakAfterAcquireFailure" value="true"></property>
	</bean>

	<!-- 支持使用注解的方式获取bean -->
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 管理事务操作 -->
 	 <aop:config>
	  <aop:pointcut id="servicesPointcut" expression="execution(* com.zfsoft..*.service..*.*(..) )" />
	  <aop:advisor advice-ref="txAdvice" pointcut-ref="servicesPointcut" />
 	</aop:config>

	<!-- 事务控制 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
          <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/> 
          <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/> 
          <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
          
          <tx:method name="do*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
          <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
          <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/> 
          <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/> 
          <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
          
          <tx:method name="zj*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/> 
          <tx:method name="xg*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/> 
          <tx:method name="sc*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/> 
          <tx:method name="*" propagation="SUPPORTS"/> 
        </tx:attributes> 
     </tx:advice>

	<!-- session工厂  --> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis/sqlMapConfig.xml"/>
		<property name="mapperLocations" value="classpath*:/com/zfsoft/**/sqlmap/**/*Mapper.xml" />
	</bean>
	
	<!-- memcached 使用时可去掉注释-->
    <!-- import resource="memcached.xml"/-->
    <bean id="springHolder" class="com.zfsoft.common.spring.SpringHolder" lazy-init="false"></bean>
</beans>